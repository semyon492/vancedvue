const path = require('path');
const {defineConfig} = require('vite');
import vue from '@vitejs/plugin-vue';

module.exports = defineConfig({
    plugins: [
        vue()
    ],
    resolve: {
        alias: {
            '@': path.resolve(__dirname, './src'),
            '#constants': path.resolve(__dirname, './src/constants'),
        },
    },
    server: {
        fs: {
            allow: [".."],
        },
    },
    build: {
        lib: {
            entry: path.resolve(__dirname, 'src/index.ts'),
            name: 'vancedvue',
            formats: ['es'], // adding 'umd' requires globals set to every external module
            fileName: (format) => `vancedvue.${format}.js`,
        },
        rollupOptions: {
            // external modules won't be bundled into your library
            external: ['vue', /@popperjs\/.+/], // not every external has a global
            output: {
                preserveModules: true,
                inlineDynamicImports: false,
                // disable warning on src/index.ts using both default and named export
                exports: 'named',
                // Provide global variables to use in the UMD build
                // for externalized deps (not useful if 'umd' is not in lib.formats)
                globals: {
                    vue: 'Vue',
                },
            },
        },
        emptyOutDir: false, // to retain the types folder generated by tsc
    },
});
