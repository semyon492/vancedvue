@tailwind base;
@tailwind components;
@tailwind utilities;


body {
    @apply bg-gray-50 dark:bg-slate-800 dark:text-slate-100
  }

:root{
    --first:black;
    --second:white;
    --blue:#40c4ff;
    --littles_text:#061e37;
}

*::before, *::after{
    box-sizing: border-box;
}

img, picture, svg, video{
    display: block;
    max-width: 100%;
}

main {
    width: 100%;
    min-height: 74.6vh;
  }
  .title h1 {
    font-size: 3rem;
  }
  
  ol, ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  #footer > div > a{
    color: inherit;
    text-decoration: inherit;
  }


.img-m {height: 1.5rem;width: 1.5rem}
.img-xl {height: 2rem;width: 2rem}
.img-xl {height: 2rem;width: 2rem}
.img-3xl {height: 3.5rem;width: 3.5rem;}

.checkbox,.radio,.switch {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
}

.checkbox input[type=checkbox],.radio input[type=radio],.switch input[type=checkbox] {
  position: absolute;
  left: 0;
  z-index: -1;
  opacity: 0
}

.checkbox input[type=checkbox]+.check,.radio input[type=radio]+.check,.switch input[type=checkbox]+.check {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
  transition-property: color,background-color,border-color,text-decoration-color,fill,stroke;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  transition-duration: .2s
}

:is(.dark .checkbox input[type=checkbox]+.check),:is(.dark .radio input[type=radio]+.check),:is(.dark .switch input[type=checkbox]+.check) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 41 59 / var(--tw-bg-opacity))
}

.checkbox input[type=checkbox]:focus+.check,.radio input[type=radio]:focus+.check,.switch input[type=checkbox]:focus+.check {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(29 78 216 / var(--tw-ring-opacity))
}

.checkbox input[type=checkbox]+.check,.radio input[type=radio]+.check {
  display: block;
  height: 1.25rem;
  width: 1.25rem
}

.checkbox input[type=checkbox]+.check {
  border-radius: .25rem
}

.switch input[type=checkbox]+.check {
  display: flex;
  height: 1.5rem;
  width: 3rem;
  flex-shrink: 0;
  align-items: center;
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
  padding: .125rem
}

.radio input[type=radio]+.check,.switch input[type=checkbox]+.check,.switch input[type=checkbox]+.check:before {
  border-radius: 9999px;
}

.checkbox input[type=checkbox]:checked+.check,.radio input[type=radio]:checked+.check {
  border-width: 4px;
  background-position: center;
  background-repeat: no-repeat
}

.checkbox input[type=checkbox]:checked+.check {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 1 1'%3E%3Cpath style='fill:%23fff' d='M 0.04038059,0.6267767 0.14644661,0.52071068 0.42928932,0.80355339 0.3232233,0.90961941 z M 0.21715729,0.80355339 0.85355339,0.16715729 0.95961941,0.2732233 0.3232233,0.90961941 z'%3E%3C/path%3E%3C/svg%3E")
}

.radio input[type=radio]:checked+.check {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24'%3E%3Cpath fill='%23fff' d='M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z' /%3E%3C/svg%3E")
}

.switch input[type=checkbox]:checked+.check,.checkbox input[type=checkbox]:checked+.check,.radio input[type=radio]:checked+.check {
  --tw-border-opacity: 1;
  border-color: rgb(37 99 235 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity))
}

.switch input[type=checkbox]+.check:before {
  content: "";
  display: block;
  height: 1.25rem;
  width: 1.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity))
}

.switch input[type=checkbox]:checked+.check:before {
  transform: translate3d(110%,0,0);
  --tw-border-opacity: 1;
  border-color: rgb(37 99 235 / var(--tw-border-opacity))
}